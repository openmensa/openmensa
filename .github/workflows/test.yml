---
name: test

on:
  push:
  pull_request:

jobs:
  rspec:
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_PASSWORD: secret
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      TZ: Europe/Berlin
      DATABASE_URL: postgresql://postgres:secret@localhost:5432

    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true

      - name: Setup
        run: |
          bundle exec rake db:create:all db:setup
          sudo bash -c "echo 127.0.1.2 openmensa.org >> /etc/hosts"
      - run: bundle exec rspec spec --tag ~type:feature --format doc
      - run: bundle exec rspec spec --tag type:feature --format doc

  rubocop:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true
      - run: bundle exec rubocop --color --parallel --fail-level E

  docker:
    needs: rspec
    if: always()

    runs-on: ubuntu-22.04

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - uses: actions/checkout@v3

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/docker/metadata-action#usage
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch only if everything
            # before has been successful (e.g. rspec)
            type=raw,value=latest,enable={{ is_default_branch && success() }}

      - uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  actionlint:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Check workflow files
        run: |
          echo "::add-matcher::.github/actionlint-matcher.json"
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint
