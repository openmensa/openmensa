---
name: test

on:
  push:
  pull_request:

jobs:
  rspec:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: openmensa
          POSTGRES_PASSWORD: secret
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 500ms
          --health-timeout 500ms
          --health-retries 10

    env:
      TZ: Europe/Berlin
      DATABASE_URL: postgresql://postgres:secret@localhost:5432/openmensa

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: yarn
        env:
          # Workaround for https://github.com/actions/setup-node/issues/899
          SKIP_YARN_COREPACK_CHECK: true

      - run: corepack enable

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup
        run: |
          bundle exec rake db:create:all db:setup
          sudo bash -c "echo 127.0.1.2 openmensa.org >> /etc/hosts"

      - run: bundle exec rake assets:precompile

      - run: bundle exec rspec --tty --color --format doc --tag ~type:feature ./spec
        env:
          COVERAGE_NAME: rspec:unit
      - run: bundle exec rspec --tty --color --format doc --tag type:feature ./spec
        env:
          COVERAGE_NAME: rspec:feature
      - uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  rubocop:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bundle exec rubocop --color --parallel --fail-level E

  prettier:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: yarn
        env:
          # Workaround for https://github.com/actions/setup-node/issues/899
          SKIP_YARN_COREPACK_CHECK: true
      - run: corepack enable
      - run: yarn install --immutable
      - run: yarn run lint:fmt

  docker:
    needs: rspec
    if: always()

    runs-on: ubuntu-22.04

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - uses: actions/checkout@v4

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/docker/metadata-action#usage
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Tag for branch/pull request
            type=ref,event=branch
            type=ref,event=pr

            # set latest tag for default branch only if everything
            # before has been successful (e.g. rspec)
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' && needs.rspec.result == 'success' }}

      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  actionlint:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - name: Check workflow files
        run: |
          echo "::add-matcher::.github/actionlint-matcher.json"
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint
