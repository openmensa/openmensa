section
  header
    h2 = t :canteen, :actions
  ul.favs
    li = link_to canteen_path(canteen) do
      i.icon.fa-fw.fa-solid.fa-mug-saucer
      = t(:canteen_actions, :open_meals)
    li = link_to edit_canteen_path(canteen) do
      i.icon.fa-fw.fa-solid.fa-pen-to-square
      = t(:edit_canteen)
    - if canteen.archived?
        li = link_to canteen_active_path(canteen), method: :post do
          i.icon.fa-fw.fa-solid.fa-play
          = t(:activate_canteen)
    - else
        li = link_to canteen_active_path(canteen), method: :delete do
          i.icon.fa-fw.fa-solid.fa-stop
          = t(:deactivate_canteen)
    li = link_to canteen_feedbacks_path(canteen) do
      i.icon.fa-fw.fa-regular.fa-envelope
      = t(:canteen_actions, :feedbacks)
    li = link_to canteen_data_proposals_path(canteen) do
      i.icon.fa-fw.fa-solid.fa-right-left
      = t(:canteen_actions, :data_proposals)
    - canteen.parsers.select {|parser| can? :edit, parser }.each do |parser|
      li = link_to parser_path(parser) do
        i.icon.fa-fw.fa-solid.fa-gear
        = t(:canteen_actions, :open_parser, name: parser.name)

- canteen.feeds.select {|feed| can? :edit, feed }.each do |feed|
  section
    header
      h3
        = t :feed, :title, name: feed.name
        ul.actions
          li = link_to feed_fetch_path(feed), title: t(:canteen_actions, :fetch_feed, name: feed.name) do
            i.icon.fa-fw.fa-solid.fa-refresh
          li = link_to feed_messages_path(feed), title: t(:canteen_actions, :open_messages, name: feed.name) do
            i.icon.fa-fw.fa-regular.fa-envelope
          li = link_to feed.url, title: t(:canteen_actions, :open_feed, name: feed.name) do
            i.icon.fa-fw.fa-solid.fa-code
          - if feed.source_url.present?
            li = link_to feed.source_url, title: t(:canteen_actions, :open_source, name: feed.name) do
              i.icon.fa-fw.fa-solid.fa-arrow-up-right-from-square
    .content
      - feed.fetches.group("state").maximum(:executed_at).each do |state, date|
        p
          = t :feed, :"last_#{state}_at"
          ' :
          = timeago_tag date.localtime
      p
        = t :feed, :next_fetch_at
        ' :
        = timeago_tag feed.next_fetch_at, title: proc {|time, options| t(:feed, :next_fetch, time: I18n.l(time, format: options[:format]), schedule: feed.schedule) }
