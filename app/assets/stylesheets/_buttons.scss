@import "responsive";
@import "extends";
@import "variables";

$btn: #aaa !default;
$btn-primary: #3079ed !default;
$btn-success: #238625 !default;

@mixin btn($base-color, $text: false) {
  // @include button($color);

  $grayscale: false;
  @if $base-color == grayscale($base-color) {
    $grayscale: true;
  }

  $border: adjust-color($base-color, $saturation: 9%, $lightness: -14%);
  $inset-shadow: adjust-color($base-color, $saturation: -8%, $lightness: 15%);
  $stop-gradient: adjust-color($base-color, $saturation: 9%, $lightness: -11%);
  $text-shadow: adjust-color($base-color, $saturation: 15%, $lightness: -18%);

  @if $text == false {
    @if lightness($base-color) > 70% {
      $text: hsl(0, 0, 20%);
    } @else {
      $text: hsl(0, 0, 100%);
    }
  }

  @if lightness($text) < 70% {
    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);
  }

  @if $grayscale == true {
    $border: grayscale($border);
    $inset-shadow: grayscale($inset-shadow);
    $stop-gradient: grayscale($stop-gradient);
    $text-shadow: grayscale($text-shadow);
  }

  color: $text;
  border: 1px solid $border;
  text-shadow: 0 1px 0 $text-shadow;
  border-radius: 1px;
  box-shadow: inset 0 1px 0 0 $inset-shadow;
  background-color: $base-color;
  background-image: linear-gradient($base-color, $stop-gradient);

  &:hover {
    $base-color-hover: adjust-color(
      $base-color,
      $saturation: -4%,
      $lightness: -5%
    );
    $inset-shadow-hover: adjust-color(
      $base-color,
      $saturation: -7%,
      $lightness: 5%
    );
    $stop-gradient-hover: adjust-color(
      $base-color,
      $saturation: 8%,
      $lightness: -14%
    );

    @if $grayscale == true {
      $inset-shadow-hover: grayscale($inset-shadow-hover);
      $stop-gradient-hover: grayscale($stop-gradient-hover);
    }

    color: $text;
    cursor: pointer;
    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;
    background-color: $base-color-hover;
    background-image: linear-gradient($base-color-hover, $stop-gradient-hover);
  }

  &:focus {
    box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.8) inset;
    @if lightness($text) < 70% {
      box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.4) inset;
    }
  }

  &:active {
    $border-active: adjust-color(
      $base-color,
      $saturation: 9%,
      $lightness: -14%
    );
    $inset-shadow-active: adjust-color(
      $base-color,
      $saturation: 7%,
      $lightness: -17%
    );

    @if $grayscale == true {
      $border-active: grayscale($border-active);
      $inset-shadow-active: grayscale($inset-shadow-active);
    }

    border: 1px solid $border-active;
    box-shadow: inset 0 0 8px 4px $inset-shadow-active,
      inset 0 0 8px 4px $inset-shadow-active, 0 1px 1px 0 #eee;
  }

  &:disabled,
  &.btn-disabled {
    &,
    &:hover,
    &:active,
    &:focus {
      cursor: default;
      color: #bbb;
      border-color: #ccc;
      text-shadow: 0 1px 1px #fff;
      box-shadow: none;
      background-color: #eee;
      background-image: linear-gradient(#eee, #e4e4e4);
    }
  }
}

.btn {
  @include btn($btn, #fff);
  font-size: 13px;
  font-size: 1.3rem;
  font-weight: bold;
  padding: 4px 10px;
  display: inline-block;
  text-decoration: none;

  // font: -webkit-small-control;
  -webkit-appearance: none;
  // -webkit-box-align: center;
  // -webkit-rtl-ordering: logical;
  // -webkit-user-select: text;
  -webkit-background-clip: padding-box;

  &[class^="icon-"]::before,
  &[class*=" icon-"]::before {
    padding-right: 6px;
  }

  &:hover {
    text-decoration: none;
  }

  &.btn-small {
    font-size: 12px;
    font-size: 1.2rem;
    font-weight: normal;
    padding: 2px 4px !important;
  }

  &.btn-large {
    font-size: 18px;
    font-size: 1.8rem;
  }

  > .icon-large:before {
    padding-right: 6px;
    vertical-align: baseline;
  }

  @include media(mobile) {
    padding: 9px 15px 7px;
  }

  &:focus,
  &.focus {
    outline: none;
  }

  &.btn-twitter {
    @include btn(#46c0fb);
  }
  &.btn-facebook {
    @include btn(#4863ae);
  }
  &.btn-github {
    @include btn(#fbfbfb, #333);
  }
  &.btn-google_oauth2 {
    @include btn(#dd4b39);
  }
  &.btn-login {
    margin: 2px 4px;
  }

  &.btn-action {
    @include btn(#238625);
  }
}

.ident-buttons {
  max-width: 16em;
  margin: 0.5em auto;

  .btn-login {
    display: block;
    width: 100%;
  }
}

.btn-group {
  a {
    @extend .btn;
    border-radius: 0;
    border-right-width: 0;
    margin: 0;

    display: block;
    float: left;

    &:hover,
    &:active,
    &.active,
    &.current,
    &:focus,
    &.focus {
      border-right-width: 1px;
      + a {
        border-left-width: 0;
      }
    }

    &:first-child {
      border-top-left-radius: 2px;
      border-bottom-left-radius: 2px;
    }
    &:last-child {
      border-top-right-radius: 2px;
      border-bottom-right-radius: 2px;
      border-right-width: 1px;
    }
  }

  &.btn-small a {
    @extend .btn-small;
  }
}

.btn-primary {
  @extend .btn;
  @include btn($btn-primary, #fff);
}

.btn-success {
  @extend .btn;
  @include btn($btn-success, #fff);
}

.btn-danger {
  @extend .btn;
  @include btn(#ea1414, #fff);
}
